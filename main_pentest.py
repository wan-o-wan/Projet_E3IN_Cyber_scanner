#!/usr/bin/env python3

import os
import subprocess
from datetime import datetime
import threading

# Définir une fonction pour exécuter un script
def run_script(script, main_dir):
    print(f"Démarrage du script {script}'\n'")
    try:
        subprocess.run(["python3", script, main_dir], check=True)
        print(f"Le script {script} s'est terminé avec succès.'\n'")
    except subprocess.CalledProcessError as e:
        print(f"Le script {script} a échoué avec l'erreur : {e}'\n'")


# Créer le nom du dossier principal basé sur la date actuelle
date_string = datetime.now().strftime("%Y-%m-%d-%H-%M")
main_dir = os.path.join("/Pentest", f"{date_string}_Output")

#recherche de l'ip et conf du réseau
run_script(os.path.join("ip_finder.py"),main_dir)

# Maj des outils  
# run_script(os.path.join("Update.py"),main_dir)


# Créer le dossier principal
os.makedirs(main_dir, exist_ok=True)
# Vérifier si le dossier a été créé
if os.path.exists(main_dir):
    print(f"Le dossier {main_dir} a été créé avec succès.")
else:
    print(f"Échec de la création du dossier {main_dir}.")

# Exécuter une série d'autres scripts à partir du dossier "/Pentest/script/python"
run_script(os.path.join("reco_tri.py"), main_dir)

# Initialiser thread1 et thread2 à None
thread1 = None
thread2 = None
thread3 = None
thread4 = None
'''
# Vérifier l'existence des dossiers et exécuter les scripts correspondants
if os.path.exists(os.path.join("/Pentest", main_dir, "22")):
    thread1 = threading.Thread(target=run_script, args=("script1.py", main_dir))
    thread1.start()

if os.path.exists(os.path.join("/Pentest", main_dir, "80")):
    thread2 = threading.Thread(target=run_script, args=("site_web.py", main_dir))
    thread2.start()
    thread3 = threading.Thread(target=run_script, args=("sqlmap_reco.py", main_dir))
    thread3.start()
    thread4 = threading.Thread(target=run_script, args=("wfuzz.py", main_dir))
    thread4.start()

    
# Attendre que les deux threads se terminent
if thread1 is not None:
    thread1.join()
if thread2 is not None:
    thread2.join()
if thread3 is not None:
    thread3.join()
if thread4 is not None:
    thread4.join()
'''
run_script(os.path.join("site_web.py"), main_dir)
run_script(os.path.join("sqlmap_reco.py"), main_dir)
run_script(os.path.join("wfuzz.py"), main_dir)
# Initialiser thread3 et thread4 à None
thread10 = None
thread11 = None

# Lancer une nouvelle série de scripts après l'exécution de thread1 et thread2
if os.path.exists(os.path.join("/Pentest", main_dir, "80/nanocms_v0.4")):
    thread10 = threading.Thread(target=run_script, args=("nanocms_exploit.py", main_dir))
    thread10.start()
'''if os.path.exists(os.path.join("/Pentest", main_dir, "80/")):
    thread11 = threading.Thread(target=run_script, args=("script4.py", main_dir))
    thread11.start()
'''
# Attendre que les deux nouveaux threads se terminent
if thread10 is not None:
    thread10.join()
if thread11 is not None:
    thread11.join()


# Script du compte rendu
run_script(os.path.join("CR_generator.py"), main_dir)
